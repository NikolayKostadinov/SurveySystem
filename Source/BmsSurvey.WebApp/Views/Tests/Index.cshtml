@{
    ViewBag.Title = "Home Page";
}

<p>
    Creating or changing a record will trigger a custom server-side validation error.
</p>

@(Html.Kendo()
        .Grid<EditingWithServerValidation.Models.Product>()
        .Name("Grid")
        .Columns(columns =>
            {
                columns.Bound(p => p.Id);
                columns.Bound(p => p.Name);
                columns.Command(command => command.Edit()).Width(100);
            })
       .ToolBar(toolbar => toolbar.Create())
       .Editable(editable => editable.Mode(GridEditMode.InLine))
       .DataSource(dataSource => dataSource
           .Ajax()
           .Batch(false)
           .ServerOperation(false)
           .Model(model => model.Id(p => p.Id))
           .Read("_Read", "Tests")
           .Update("_Update", "Tests")
           .Create("_Create", "Tests")
           .Events(events => events.Error("error"))
       )
)

<script type="text/kendo-template" id="message">
    <div class="k-widget k-tooltip k-tooltip-validation k-invalid-msg field-validation-error" style="margin: 0.5em; display: block; " data-for="#=field#" data-valmsg-for="#=field#" id="#=field#_validationMessage">
        <span class="k-icon k-warning"> </span>#=message#<div class="k-callout k-callout-n"></div>
    </div>
</script>

<script type="text/javascript">
    var validationMessageTmpl = kendo.template($("#message").html());

    function error(args) {
        if (args.errors) {
            var grid = $("#Grid").data("kendoGrid");
            grid.one("dataBinding", function (e) {
                e.preventDefault();   // cancel grid rebind if error occurs

                for (var error in args.errors) {
                    showMessage(grid.editable.element, error, args.errors[error].errors);
                }
            });
        }
    }

    function showMessage(container, name, errors) {
        //add the validation message to the form
        container.find("[data-valmsg-for=" + name + "],[data-val-msg-for=" + name + "]")
        .replaceWith(validationMessageTmpl({ field: name, message: errors[0] }))
    }
</script>
